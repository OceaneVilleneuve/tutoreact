{"ast":null,"code":"var _jsxFileName = \"/Users/oceanevilleneuve/Documents/developpement/workflow/tutoreact/src/components/ShoppingList.js\";\nimport { plantList } from '../datas/plantList';\nimport PlantItem from './PlantItem';\nimport '../styles/ShoppingList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShoppingList(_ref) {\n  let {\n    cart,\n    updateCart\n  } = _ref;\n  // Petite précision : categories nous vient de la partie précédente pour récupérer toutes les catégories uniques de plantes.\n\n  const categories = plantList.reduce((acc, elem) => acc.includes(elem.category) ? acc : acc.concat(elem.category), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lmj-shopping-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: cat\n      }, cat, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"lmj-plant-list\",\n      children: plantList.map(_ref2 => {\n        let {\n          id,\n          cover,\n          name,\n          water,\n          light\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(PlantItem, {\n            cover: cover,\n            name: name,\n            water: water,\n            light: light\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateCart(cart + 1),\n            children: \"Ajouter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 27\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 23\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 11\n  }, this);\n}\n_c = ShoppingList;\nexport default ShoppingList;\nvar _c;\n$RefreshReg$(_c, \"ShoppingList\");","map":{"version":3,"names":["plantList","PlantItem","jsxDEV","_jsxDEV","ShoppingList","_ref","cart","updateCart","categories","reduce","acc","elem","includes","category","concat","className","children","map","cat","fileName","_jsxFileName","lineNumber","columnNumber","_ref2","id","cover","name","water","light","onClick","_c","$RefreshReg$"],"sources":["/Users/oceanevilleneuve/Documents/developpement/workflow/tutoreact/src/components/ShoppingList.js"],"sourcesContent":["import { plantList } from '../datas/plantList'\nimport PlantItem from './PlantItem'\nimport '../styles/ShoppingList.css'\n\nfunction ShoppingList({ cart, updateCart }) {\n  // Petite précision : categories nous vient de la partie précédente pour récupérer toutes les catégories uniques de plantes.\n\n      const categories = plantList.reduce(\n          (acc, elem) =>\n              acc.includes(elem.category) ? acc : acc.concat(elem.category),\n              []\n      )\n\n      return (\n          <div className='lmj-shopping-list'>\n              <ul>\n                  {categories.map((cat) => (\n                  <li key={cat}>{cat}</li>\n                  ))}\n              </ul>\n              <ul className='lmj-plant-list'>\n                  {plantList.map(({ id, cover, name, water, light }) => (\n                      <div key={id}>\n                          <PlantItem cover={cover} name={name} water={water} light={light} />\n                          <button onClick={() => updateCart(cart + 1)}>Ajouter</button>\n                      </div>\n                  ))}\n              </ul>\n          </div>\n      )\n  }\n\n  export default ShoppingList\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,YAAYA,CAAAC,IAAA,EAAuB;EAAA,IAAtB;IAAEC,IAAI;IAAEC;EAAW,CAAC,GAAAF,IAAA;EACxC;;EAEI,MAAMG,UAAU,GAAGR,SAAS,CAACS,MAAM,CAC/B,CAACC,GAAG,EAAEC,IAAI,KACND,GAAG,CAACE,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC,GAAGH,GAAG,GAAGA,GAAG,CAACI,MAAM,CAACH,IAAI,CAACE,QAAQ,CAAC,EAC7D,EACR,CAAC;EAED,oBACIV,OAAA;IAAKY,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9Bb,OAAA;MAAAa,QAAA,EACKR,UAAU,CAACS,GAAG,CAAEC,GAAG,iBACpBf,OAAA;QAAAa,QAAA,EAAeE;MAAG,GAATA,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CACtB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLnB,OAAA;MAAIY,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EACzBhB,SAAS,CAACiB,GAAG,CAACM,KAAA;QAAA,IAAC;UAAEC,EAAE;UAAEC,KAAK;UAAEC,IAAI;UAAEC,KAAK;UAAEC;QAAM,CAAC,GAAAL,KAAA;QAAA,oBAC7CpB,OAAA;UAAAa,QAAA,gBACIb,OAAA,CAACF,SAAS;YAACwB,KAAK,EAAEA,KAAM;YAACC,IAAI,EAAEA,IAAK;YAACC,KAAK,EAAEA,KAAM;YAACC,KAAK,EAAEA;UAAM;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnEnB,OAAA;YAAQ0B,OAAO,EAAEA,CAAA,KAAMtB,UAAU,CAACD,IAAI,GAAG,CAAC,CAAE;YAAAU,QAAA,EAAC;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAFvDE,EAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGP,CAAC;MAAA,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACQ,EAAA,GA1BM1B,YAAY;AA4BnB,eAAeA,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}